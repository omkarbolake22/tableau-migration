pipeline {
  agent any
  environment {
    AWS_REGION = 'us-east-1'
    AWS_DEFAULT_REGION = 'us-east-1'
  }

  stages {
    stage('Run All JSONs with AWS Credentials') {
  agent {
    docker {
      image 'amazon/aws-cli:latest'   // <-- valid tag
      args  '-u 0:0'                  // run as root so we can install pkgs
    }
  }
  steps {
    echo 'Revealv2 USPROD - Deployment'
    sh '''
      set -euo pipefail

      # Install Python (container may be AL2/apk/apt based depending on tag)
      if ! command -v python3 >/dev/null 2>&1; then
        if command -v yum >/dev/null 2>&1; then yum -y install python3
        elif command -v apk >/dev/null 2>&1; then apk add --no-cache python3 py3-pip
        elif command -v apt-get >/dev/null 2>&1; then apt-get update && apt-get install -y python3 python3-pip
        fi
      fi

      assume_role() {
        local ROLE_ARN="$1"; local SESSION_NAME="$2"
        creds=$(aws sts assume-role --role-arn "$ROLE_ARN" --role-session-name "$SESSION_NAME" \
                 --query "Credentials.[AccessKeyId,SecretAccessKey,SessionToken]" --output text)
        export AWS_ACCESS_KEY_ID=$(echo "$creds" | awk '{print $1}')
        export AWS_SECRET_ACCESS_KEY=$(echo "$creds" | awk '{print $2}')
        export AWS_SESSION_TOKEN=$(echo "$creds" | awk '{print $3}')
      }

      assume_role "arn:aws:iam::889340682220:role/revealv2-tableau-usprod-deployment-role" \
                  "USPROD-Revealv2-Tableau-Jenkins-DeployRole"

      echo "Current directory: $(pwd)"
      python3 run_all_json_in_folder.py
    '''
exit_code=$?

            if [ $exit_code -ne 0 ]; then
              echo "Python script failed with exit code $exit_code"
              if [ -f output.log ]; then
                echo "Last 20 lines of output:"
                tail -n 20 output.log || true
              fi
              exit $exit_code
            else
              echo "Python script completed successfully"
            fi
          '''
        }
      }
    }
  }

  post {
    always  { echo 'Pipeline finished.' }
    failure { echo 'Deployment failed!' }
  }
}
