pipeline {
    agent any
    environment {
        AWS_REGION = 'us-east-1'
    }
    stages {
        stage('Run All JSONs with AWS Credentials') {

    agent {
        docker { image 'amazon/aws-cli:2' }   // <-- AWS CLI ready
          }

            steps {

                sh (label:"Revealv2 USPROD - Deployment", script:'''
                    set +x
                    set -e
                    #
                	assume_role() {
                		local ROLE_ARN="$1"
                		local SESSION_NAME="$2"
                
                		# Run AWS CLI to assume the role
                		local creds
                		creds=$(aws sts assume-role \
                			--role-arn "$ROLE_ARN" \
                			--role-session-name "$SESSION_NAME" \
                			--query "Credentials.[AccessKeyId,SecretAccessKey,SessionToken]" \
                			--output text)
                
                		# Export credentials
                		export AWS_ACCESS_KEY_ID=$(echo "$creds" | awk '{print $1}')
                		export AWS_SECRET_ACCESS_KEY=$(echo "$creds" | awk '{print $2}')
                		export AWS_SESSION_TOKEN=$(echo "$creds" | awk '{print $3}')
                	}
                	#
                	assume_role "arn:aws:iam::889340682220:role/revealv2-tableau-usprod-deployment-role" "USPROD-Revealv2-Tableau-Jenkins-DeployRole"
                	
                	## 
                	echo "Current directory: $(pwd)"
                                  
                	python3 run_all_json_in_folder.py 
                	EXIT_CODE=$?
                	if [ $EXIT_CODE -ne 0 ]; then
                		echo "Python script failed with exit code $EXIT_CODE"
                		echo "Last 20 lines of output:"
                		tail -n 20 output.log
                		exit $EXIT_CODE
                	else
                		echo "Python script completed successfully"
                	fi
                 
                	##
                
                ''')

            }
        }
    }
    post {
        always {
            echo 'Pipeline finished.'
        }
        failure {
            echo 'Deployment failed!'
        }
    }
}
